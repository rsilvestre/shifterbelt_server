{"version":3,"sources":["plan.es6"],"names":[],"mappings":"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","file":"plan.js","sourcesContent":["/**\n * Created by michaelsilvestre on 4/06/15\n */\n\n/**\n * Module dependencies.\n */\n\nimport mongoose from 'mongoose';\nimport utils from '../lib/utils';\nimport countries from '../utils/countries.json';\n\nlet Schema = mongoose.Schema;\n\nlet countryValidator = function(countryCode) {\n  \"use strict\";\n\n  return ~utils.indexof(countries, { code: countryCode });\n};\n\nlet PlanSchema = new Schema({\n  tariffPlan: { type: Schema.ObjectId, ref: \"Tariff\", required: true },\n  firstname: { type: String, required: \"The firstname should be filled\" },\n  lastname: { type: String, required: \"The lastname should be filled\" },\n  address: {\n    address1: { type: String, required: \"An address should be given\" },\n    address2: { type: String },\n    country: { type: String, required: \"A country should be selected\", validate: countryValidator },\n    zipcode: { type: String, required: \"A zip code should be given\" },\n    city: { type: String, required: \"The city should be filled\" },\n    phonenumber: { type: String, required: \"The phone number should be filled\" }\n  },\n  createdAt: { type: Date, default: Date.now }\n\n});\n\n/**\n * Virtals\n */\nPlanSchema.virtual('address1')\n  .set(function(value) {\n    this.address.address1 = value;\n  })\n  .get(function() {\n    \"use strict\";\n    return this.address.address1;\n  });\n\nPlanSchema.virtual('address2')\n  .set(function(value) {\n    this.address.address2 = value;\n  })\n  .get(function() {\n    \"use strict\";\n    return this.address.address2;\n  });\n\nPlanSchema.virtual('country')\n  .set(function(value) {\n    this.address.country = value;\n  })\n  .get(function() {\n    \"use strict\";\n    return this.address.country;\n  });\n\nPlanSchema.virtual('zipcode')\n  .set(function(value) {\n    this.address.zipcode = value;\n  })\n  .get(function() {\n    \"use strict\";\n    return this.address.zipcode;\n  });\n\nPlanSchema.virtual('city')\n  .set(function(value) {\n    this.address.city = value;\n  })\n  .get(function() {\n    \"use strict\";\n    return this.address.city;\n  });\n\nPlanSchema.virtual('phonenumber')\n  .set(function(value) {\n    this.address.phonenumber = value;\n  })\n  .get(function() {\n    \"use strict\";\n    return this.address.phonenumber;\n  });\n\n\nmongoose.model('Plan', PlanSchema);\n"]}