{"version":3,"sources":["device.es6"],"names":[],"mappings":";;;;;;;;;;;;wBAIqB,UAAU;;;;AAE/B,IAAI,YAAY,GAAG,sBAAS,MAAM,CAAC;AACjC,YAAU,EAAE;AACV,QAAI,EAAE,MAAM;AACZ,YAAQ,EAAE,wBAAwB;AAClC,UAAM,EAAE,IAAI;AACZ,QAAI,EAAE,IAAI;AACV,YAAQ,EAAE,CAAC,UAAC,KAAK,EAAK;AACpB,aAAO,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnC,EAAE,qBAAqB,CAAC;AACzB,SAAK,EAAE,CAAC,cAAc,EAAE,iCAAiC,CAAC;GAC3D;AACD,cAAY,EAAE,CAAC;AACb,iBAAa,EAAE,EAAE,IAAI,EAAE,sBAAS,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE;AAC3F,UAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;AACzC,QAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAM,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC,EAAE;GAC7E,CAAC;AACF,WAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,WAAS,IAAI,CAAC,GAAG,EAAE;CAC7C,CAAC,CAAC;;AAEH,YAAY,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;;AAE/B,IAAI,MAAM,GAAG,sBAAS,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;;QAAhD,MAAM,GAAN,MAAM;AAEjB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;;AAE5C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,UAAC,KAAK,EAAK;AACrD,OAAK,CAAC,OAAO,CAAC,UAAC,WAAW,EAAK;AAC7B,QAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;AAClD,aAAO,KAAK,CAAC;KACd;GACF,CAAC,CAAC;AACH,SAAO,IAAI,CAAC;CACb,EAAE,0BAA0B,CAAC,CAAC","file":"device.js","sourcesContent":["/**\n * Created by michaelsilvestre on 24/04/15\n */\n\nimport mongoose from \"mongoose\";\n\nlet deviceSchema = mongoose.Schema({\n  macAddress: {\n    type: String,\n    required: 'macAddress is required',\n    unique: true,\n    trim: true,\n    validate: [(value) => {\n      return /[a-z0-9]{12}/.test(value);\n    }, \"Invalid Mac Address\"],\n    match: [/[a-z0-9]{12}/, \"Please fill a valid Mac Address\"]\n  },\n  applications: [{\n    applicationId: { type: mongoose.Schema.Types.ObjectId, ref: 'Application', required: true },\n    active: { type: Boolean, required: true },\n    role: { type: String, required: true, enum: [\"master\", \"manager\", \"slave\"] }\n  }],\n  createdAt: { type: Date, default: Date.now }\n});\n\ndeviceSchema.index({ macAddress: 1 });\n\nexport let Device = mongoose.model('Device', deviceSchema);\n\nDevice.schema.path('macAddress').validate();\n\nDevice.schema.path('applications').validate((value) => {\n  value.forEach((application) => {\n    if (!/master|manager|slave/.test(application.role)) {\n      return false;\n    }\n  });\n  return true;\n}, \"Invalid application role\");"]}