{"version":3,"sources":["authenticate.es6"],"names":[],"mappings":"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","file":"authenticate.js","sourcesContent":["/**\n * Created by michaelsilvestre on 25/04/15\n */\n\nimport { adapters } from \"../adapters/absAdapter.js\"\nimport { LinkDevice } from \"../modules/message.js\"\nimport Authentication from \"../modules/authentication.js\"\n\nimport _ from \"underscore\"\n\nexport let authenticateInit = () => {\n  let websocketAdapter = adapters.getAdapter(\"websocket\");\n  websocketAdapter.connection(function(socket) {\n    let device = null;\n    console.log(\"a device is connected\");\n    socket.auth = false;\n    //socket.emit('event', \"first message\");\n\n    socket.on('authenticate', (data) => {\n      let authentication = new Authentication(data);\n      authentication.checkAuthToken((err, success) => {\n        if (err) {\n          return socket.emit('error', err);\n        }\n        if (!success) {\n          return;\n        }\n        device = success;\n        console.log(`Authenticated socket: ${socket.id}`);\n        socket.auth = true;\n\n        _.each(websocketAdapter.io.nsps, (nsp) => {\n          console.log(`restoring socket to: ${nsp.name}`);\n          nsp.connected[socket.id] = socket;\n        });\n\n\n        let linkDevice = new LinkDevice(device, socket, (err, device, slaves) => {\n          if (err) {\n            return console.warn(err);\n          }\n          socket.emit('authenticated');\n          socket.emit('message', { event: \"first server message\" });\n          socket.emit('service', {\n            action: 'identification',\n            content: { role: device['role'], status: 'connected', id: device['macAddress'] },\n            time: new Date()\n          });\n          if (slaves) {\n            socket.emit('service', {\n              action: 'slaveList',\n              content: Object.keys(slaves).map((value) => {\n                return { role: 'slave', status: 'connected', id: value }\n              }),\n              time: new Date()\n            });\n          }\n        });\n        socket.on('disconnect', () => {\n          linkDevice.disconnect();\n        })\n      });\n    });\n\n    socket.on('test', (message) => {\n      console.log(message);\n    });\n\n    setTimeout(() => {\n      if (!socket.auth) {\n        console.log(`Disconnection socket: ${socket.id}`);\n        socket.disconnect('unauthorized');\n      }\n    }, 1000);\n\n    socket.on('disconnect', () => {\n      console.log(\"a device is disconnected\");\n    })\n\n  });\n};\n\n"]}