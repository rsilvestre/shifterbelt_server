{
  "version": 3,
  "sources": [
    "message.es6"
  ],
  "names": [],
  "mappings": "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",
  "file": "message.js",
  "sourcesContent": [
    "/**\n * Created by michaelsilvestre on 19/05/15\n */\n\nimport { adapters } from \"../adapters/absAdapter.js\";\nimport _ from \"underscore\";\n\nlet masters = {};\nlet managers = {};\nlet slaves = {};\n\n\nexport let messageInit = () => {\n  let queueAdapter = adapters.getAdapter(\"queue\");\n  let queue = new Queue(queueAdapter);\n  queue.createTestQueue('subPub', () => {\n    console.log(\"Test message successfull\")\n  });\n};\n\nexport class LinkDevice {\n  constructor(data, socket, callback) {\n    this._queue = new Queue(adapters.getAdapter('queue'));\n    this._socket = socket;\n    this._data = data;\n    let action = `register${data.role.charAt(0).toUpperCase()}${data.role.slice(1)}`;\n    console.log(`action: ${action}`);\n\n    //if (!this.hasOwnProperty(action)) {\n    //  throw new Error(`The property: ${action}, not exist`);\n    //}\n    try {\n      this[action](data, socket, callback);\n    } catch (e) {\n      console.warn(new Error(`The property: ${action}, not exist: ${e}`));\n    }\n  }\n\n  createIfNotExistListDevices(list, data, next) {\n    if (!list.hasOwnProperty(data['businessId'])) {\n      list[data['businessId'].toString()] = {};\n      return next();\n    }\n    if (list[data['businessId']].hasOwnProperty(data['macAddress'])) {\n      return next(new Error(`The queue: ${data['role']}, still contain a key: ${data['macAddress']}`));\n    }\n    next();\n  }\n\n  registerMaster(data, socket, next) {\n    this.createIfNotExistListDevices(masters, data, (err) => {\n      if (err) {\n        return next(err);\n      }\n      masters[`${data['businessId']}`][`${data['macAddress']}`] = this;\n      next(null, socket);\n    });\n\n  }\n\n;\n\n  registerManager(data, socket, next) {\n    this.createIfNotExistListDevices(managers, data, (err) => {\n      if (err) {\n        return next(err);\n      }\n      managers[`${data['businessId']}`][`${data['macAddress']}`] = this;\n    });\n  }\n\n;\n\n  registerSlave(data, socket, next) {\n    this.createIfNotExistListDevices(slaves, data, (err) => {\n      if (err) {\n        return next(err);\n      }\n      slaves[`${data['businessId']}`][`${data['macAddress']}`] = this;\n      Object.keys(masters[data['businessId']] || {}).forEach((key) => {\n        this._queue.createMasterQueue(`${data['businessId']}|${data['macAddress']}`, (message) => {\n          console.log('subQueue message: ' + message.toString());\n          masters[data['businessId']][key].socket.emit('message', message);\n        }, (callback) => {\n          socket.on('message', callback);\n          next(null, socket);\n        });\n      });\n    });\n  }\n\n;\n\n  get socket() {\n    return this._socket;\n  }\n\n  disconnect(done) {\n    let action = `disconnectFrom${this._data.role.charAt(0).toUpperCase()}${this._data.role.slice(1)}`;\n    console.log(`action: ${action}`);\n\n    //if (!this.hasOwnProperty(action)) {\n    //  throw new Error(`The property: ${action}, not exist`);\n    //}\n    try {\n      this[action](done);\n    } catch (e) {\n      console.warn(new Error(`The property: ${action}, not exist: ${e}`));\n    }\n  }\n\n  deleteDevice(list, done) {\n    done = \"function\" === typeof done ? done : (value) => {\n      return value\n    };\n    if (!list[this._data['businessId']] || !list[this._data['businessId']][this._data['macAddress']]) {\n      return done(new Error('Nothing to do'));\n    }\n    delete(list[this._data['businessId']][this._data['macAddress']]);\n    console.log(`device: ${[this._data['macAddress']]}, has been removed from: ${this._data['businessId']}`);\n    return done();\n  }\n\n  disconnectFromMaster(done) {\n    this.deleteDevice(masters, done);\n  }\n\n  disconnectFromManager(done) {\n    this.deleteDevice(managers, done);\n  }\n\n  disconnectFromSlave(done) {\n    this.deleteDevice(slaves, done);\n  }\n\n  toto() {\n    let logMessage = (msg) => {\n      console.log(\" [x] '%s'\", msg.content.toString());\n    };\n\n    this.registrerSubQueue(queue, logMessage, (callback) => {\n      callback('info: Hello World!', () => {\n        next(this);\n      });\n    }, (...arg) => {\n      this.registerPubQueue(...arg);\n    });\n\n  }\n\n;\n}\n\nclass Queue {\n  constructor(queueAdapter) {\n    this._queueAdapter = queueAdapter;\n  }\n\n  createTestQueue(queue, next) {\n    let messageCb = (msg) => {\n      console.log(\" [x] '%s'\", msg.content.toString());\n    };\n\n    this.registrerSubQueue(queue, messageCb, (callback) => {\n      callback('info: Hello World!', () => {\n        next();\n      });\n    }, (...arg) => {\n      this.registerPubQueue(...arg);\n    });\n  }\n\n  createMasterQueue(queue, subMessage, pubMessage) {\n\n    this.registrerSubQueue(queue, subMessage, (callback) => {\n      pubMessage((message) => {\n        callback(message);\n      });\n    }, (...arg) => {\n      this.registerPubQueue(...arg);\n    });\n  }\n\n  registrerSubQueue(queue, subMessage, callback, next) {\n    let ok = this._queueAdapter.chSub.assertExchange(queue, 'fanout', { durable: false });\n\n    ok = ok.then(() => {\n      return this._queueAdapter.chSub.assertQueue('', { exclusive: true });\n    });\n\n    ok = ok.then((qok) => {\n      return this._queueAdapter.chSub.bindQueue(qok.queue, queue, '').then(() => {\n        return qok.queue;\n      });\n    });\n\n    ok = ok.then((queue) => {\n      return this._queueAdapter.chSub.consume(queue, subMessage, { noAck: true });\n    });\n\n    ok.then(() => {\n      console.log(' [*] Waiting for message');\n      next(queue, callback);\n    });\n\n  }\n\n  registerPubQueue(queue, next) {\n    console.log(`queue ${queue}`);\n    let ok = this._queueAdapter.chPub.assertExchange(queue, 'fanout', { durable: false });\n\n    ok.then(() => {\n      next((message, callback) => {\n        console.log(`message ${message}`);\n        this._queueAdapter.chPub.publish(queue, '', new Buffer(message));\n        console.log(\" [x] Sent '%s'\", message);\n        //this.chPub.close();\n        if (callback) {\n          callback();\n        }\n      });\n    });\n\n  }\n}\n"
  ]
}