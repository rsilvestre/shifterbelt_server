{"version":3,"sources":["logger.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;mBAegB,KAAK;;;;kBACN,IAAI;;;;2BACK,eAAe;;;;8BAChB,iBAAiB;;;;4BACrB,kBAAkB;;;;AAC9B,IAAI,GAAG,GAAG,IAAI,CAAC;;QAAX,GAAG,GAAH,GAAG;AAEP,IAAI,MAAM,GAAG;AAClB,OAAK,EAAE,eAAC,KAAK,EAAK;AAChB,QAAI,GAAG,YAAY,MAAM,EAAE;AACzB,SAAG,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;GACF;AACD,OAAK,EAAE,eAAC,KAAK,EAAK;AAChB,QAAI,GAAG,YAAY,MAAM,EAAE;AACzB,SAAG,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;GACF;AACD,QAAM,EAAE,gBAAC,KAAK,EAAK;AACjB,QAAI,GAAG,YAAY,MAAM,EAAE;AACzB,SAAG,CAAC,MAAM,GAAG,KAAK,CAAC;KACpB;GACF;AACD,MAAI,EAAE,cAAC,KAAK,EAAK;AACf,QAAI,GAAG,YAAY,MAAM,EAAE;AACzB,SAAG,CAAC,OAAO,GAAG,KAAK,CAAC;KACrB;GACF;AACD,MAAI,EAAE,cAAC,KAAK,EAAK;AACf,QAAI,GAAG,YAAY,MAAM,EAAE;AACzB,SAAG,CAAC,IAAI,GAAG,KAAK,CAAC;KAClB;GACF;CACF,CAAC;;QA1BS,MAAM,GAAN,MAAM;;IA4BI,MAAM;AACd,WADQ,MAAM,GACX;0BADK,MAAM;GAExB;;eAFkB,MAAM;;WAIrB,cAAC,QAAQ,EAAE,OAAO,EAAE;AACtB,UAAI,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACtD,eAAO,IAAI,KAAK,qBAAmB,QAAQ,iBAAc,CAAC;OAC3D;;AAED,UAAI,CAAC,IAAI,GAAG,4BAAW,MAAM,CAAC;AAC5B,aAAK,EAAE,0BAAO,gBAAgB;OAC/B,CAAC,CAAC;AACH,cA1CO,GAAG,GA0CV,GAAG,GAAG,IAAI,CAAC;KACZ;;;SAEQ,UAAC,KAAK,EAAE;AACf,aAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,UAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACxB;;;SAEQ,UAAC,KAAK,EAAE;AACf,aAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,UAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACxB;;;SAEU,UAAC,KAAK,EAAE;AACjB,aAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpB,UAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAC1B;;;SAES,UAAC,KAAK,EAAE;AAChB,aAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,UAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACzB;;;SAEO,UAAC,KAAK,EAAE;AACd,aAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpB,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACvB;;;SAtCkB,MAAM;;;qBAAN,MAAM","file":"logger.js","sourcesContent":["/**\n * Created by michaelsilvestre on 20/04/15\n */\n\n/**\n * 0 EMERGENCY system is unusable\n * 1 ALERT action must be taken immediately\n * 2 CRITICAL the system is in critical condition\n * 3 ERROR error condition\n * 4 WARNING warning condition\n * 5 NOTICE a normal but significant condition\n * 6 INFO a purely informational message\n * 7 DEBUG messages to debug an application\n */\n\nimport Log from \"log\"\nimport fs from \"fs\"\nimport appRootPath from \"app-root-path\"\nimport logentries from 'node-logentries';\nimport config from '../config/config'\nexport var log = null;\n\nexport let logger = {\n  error: (value) => {\n    if (log instanceof Logger) {\n      log.error = value;\n    }\n  },\n  debug: (value) => {\n    if (log instanceof Logger) {\n      log.debug = value;\n    }\n  },\n  notice: (value) => {\n    if (log instanceof Logger) {\n      log.notice = value;\n    }\n  },\n  warn: (value) => {\n    if (log instanceof Logger) {\n      log.warning = value;\n    }\n  },\n  info: (value) => {\n    if (log instanceof Logger) {\n      log.info = value;\n    }\n  }\n};\n\nexport default class Logger {\n  constructor() {\n  }\n\n  init(logLevel, logFile) {\n    if ([\"error\", \"debug\", \"info\"].indexOf(logLevel) == -1) {\n      return new Error(`The log level: ${logLevel}, not exist`);\n    }\n    //log = new Log(logLevel, fs.createWriteStream(`${appRootPath}/log/${logFile}`));\n    this._log = logentries.logger({\n      token: config.logentries_token\n    });\n    log = this;\n  }\n\n  set error(value) {\n    console.error(value);\n    this._log.error(value);\n  }\n\n  set debug(value) {\n    console.log(value);\n    this._log.debug(value);\n  }\n\n  set warning(value) {\n    console.warn(value);\n    this._log.warning(value);\n  }\n\n  set notice(value) {\n    console.log(value);\n    this._log.notice(value);\n  }\n\n  set info(value) {\n    console.info(value);\n    this._log.info(value);\n  }\n}"]}