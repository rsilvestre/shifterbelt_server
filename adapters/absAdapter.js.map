{"version":3,"sources":["/Users/michaelsilvestre/git/shifterbelt/beta/adapters/absAdapter.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;sBAIwB,uBAAuB;;IAAnC,MAAM;;sBACC,kBAAkB;;;;AAErC,IAAI,GAAG,GAAG,yBAAY,CAAC;;AAEvB,IAAI,QAAQ,GAAG,EAAE,CAAC;;IAEG,UAAU;AAChB,aADM,UAAU,CACf,IAAI,EAAE;8BADD,UAAU;;AAEvB,YAAI,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC7C,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACjC,WAAG,CAAC,KAAK,oBAAkB,IAAI,CAAC,IAAI,0CAAuC,CAAC;KAC/E;;iBALgB,UAAU;;aAOpB,YAAG;AACN,mBAAO,IAAI,CAAC,IAAI,CAAC;SACpB;;;eAES,oBAAC,GAAG,EAAE,KAAK,EAAE;AACnB,gBAAI,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;AAChC,uBAAO,IAAI,KAAK,mBAAiB,KAAK,mBAAgB,CAAC;aAC1D;AACD,oBAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SACzB;;;eAEU,uBAAG;AACV,mBAAO,QAAQ,CAAC;SACnB;;;eAEc,yBAAC,GAAG,EAAE;AACjB,gBAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AAC/B,uBAAO,IAAI,KAAK,qBAAmB,GAAG,iBAAc,CAAA;aACvD;AACD,mBAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;SACxB;;;eAEe,0BAAC,IAAI,EAAE;AACnB,gBAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC3C,gBAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AAC/B,uBAAO,IAAI,KAAK,eAAa,GAAG,iBAAc,CAAC;aAClD;AACD,mBAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;SACxB;;;WAnCgB,UAAU;;;qBAAV,UAAU","file":"absAdapter.js","sourcesContent":["/**\n * Created by michaelsilvestre on 19/04/15\n */\n\nimport * as config from \"../config/adapters.js\"\nimport Logger from \"../lib/logger.js\"\n\nlet log = new Logger();\n\nlet adapters = {};\n\nexport default class AbsAdapter {\n    constructor(name) {\n        this._key = config.adapters.getAdapter(name);\n        this.addAdapter(this._key, this);\n        log.debug = `the module: ${this._key}, has been added to the adapters list`;\n    }\n\n    get key() {\n        return this._key;\n    }\n\n    addAdapter(key, value) {\n        if (adapters.hasOwnProperty(value)) {\n            return new Error(`The adapter: ${value}, still exist`);\n        }\n        adapters[key] = value;\n    }\n\n    getAdapters() {\n        return adapters;\n    }\n\n    getAdapterByKey(key) {\n        if (!adapters.hasOwnProperty(key)) {\n            return new Error(`The adaptater: ${key}, not exist`)\n        }\n        return adapters[key];\n    }\n\n    getAdapterByName(name) {\n        let key = config.adapters.getAdapter(name);\n        if (!adapters.hasOwnProperty(key)) {\n            return new Error(`The key: ${key}, not exist`);\n        }\n        return adapters[key];\n    }\n}"]}