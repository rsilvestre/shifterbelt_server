{"version":3,"sources":["adapters.es6"],"names":[],"mappings":";;;;;;;;AAGA,IAAI,YAAY,GAAG;AACf,cAAU,EAAE,UAAU;AACtB,YAAQ,EAAE,OAAO;AACjB,WAAO,EAAE,MAAM;AACf,eAAW,EAAE,UAAU;CAC1B,CAAC;;AAEF,IAAI,MAAM,GAAG;AACT,SAAK,EAAE;AACH,eAAO,EAAE,cAAc;AACvB,cAAM,EAAE;AACJ,gBAAI,EAAE,wBAAwB;AAC9B,oBAAQ,EAAE,WAAW;AACrB,kBAAM,EAAE,iCAAiC;AACzC,oBAAQ,EAAE,aAAa;;AAEvB,mBAAO,EAAE;AACL,uBAAO,EAAE,IAAI;AAAA,aAChB;SACJ;KACJ;AACD,YAAQ,EAAE;AACN,eAAO,EAAE,iBAAiB;AAC1B,cAAM,EAAE;AACJ,eAAG,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,8CAA8C;SACjF;KACJ;AACD,SAAK,EAAE;AACH,eAAO,EAAE,cAAc;AACvB,cAAM,EAAE;AACJ,sBAAU,EAAE;AACR,oBAAI,EAAE,OAAO;AACb,oBAAI,EAAE,WAAW;AACjB,wBAAQ,EAAE,EAAE;AACZ,oBAAI,EAAE,IAAI;AACV,sBAAM,EAAE,MAAM;AACd,mBAAG,EAAE,MAAM;AACX,uBAAO,EAAE,KAAK;AAAA,aACjB;AACD,sBAAU,EAAE,sBAAY;AACpB,4BAAY,CAAC;AACb,uBAAO,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;aACzH;SACJ;KACJ;AACD,YAAQ,EAAE;AACN,eAAO,EAAE,eAAe;AACxB,cAAM,EAAE;AACJ,eAAG,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,kBAAkB;SACvD;KACJ;AACD,QAAI,EAAE;AACF,eAAO,EAAE,aAAa;AACtB,cAAM,EAAE;;AAEJ,eAAG,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,kBAAkB;SACvD;KACJ;AACD,YAAQ,EAAE;AACN,eAAO,EAAE,WAAW;AACpB,cAAM,EAAE;AACJ,gBAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;AAC9B,qBAAS,EAAE,IAAI;SAClB;KACJ;CACJ,CAAC;;qBAEa;AACX,oBAAgB,EAAE,0BAAS,IAAI,EAAE;AAC7B,YAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AACpC,mBAAO,IAAI,KAAK,+CAA6C,IAAI,CAAG,CAAC;SACxE;;AAED,YAAI,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE;AAC5C,mBAAO,IAAI,KAAK,2DAAwD,YAAY,CAAC,IAAI,CAAC,CAAG,CAAC;SACjG;;AAED,eAAO,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;KACrC;AACD,cAAU,EAAE,oBAAS,IAAI,EAAE;AACvB,YAAI,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC1C,YAAI,OAAO,YAAY,KAAK,EAAE;AAC1B,mBAAO,OAAO,CAAC;SAClB;AACD,eAAO,OAAO,CAAC,OAAO,CAAC;KAC1B;AACD,aAAS,EAAE,mBAAS,IAAI,EAAE;AACtB,YAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACzC,YAAI,MAAM,YAAY,KAAK,EAAE;AACzB,mBAAO,MAAM,CAAC;SACjB;AACD,eAAO,MAAM,CAAC,MAAM,CAAC;KACxB;CACJ","file":"adapters.js","sourcesContent":["/**\n * Created by michaelsilvestre on 19/04/15\n */\nlet defaultValue = {\n    'database': 'mongoose',\n    'memory': 'redis',\n    'queue': 'amqp',\n    'websocket': 'socketIo'\n};\n\nlet config = {\n    mssql: {\n        adapter: \"mssqlAdapter\",\n        config: {\n            user: 'shifterbelt@n8vsykqyzf',\n            password: 'ascrt2bZ$',\n            server: 'n8vsykqyzf.database.windows.net', // You can use 'localhost\\\\instance' to connect to named instance\n            database: 'shifterbelt',\n\n            options: {\n                encrypt: true // Use this if you're on Windows Azure\n            }\n        }\n    },\n    mongoose: {\n        adapter: \"mongooseAdapter\",\n        config: {\n            url: process.env.MONGOHQ_URL || \"mongodb://localhost:27017/heroku_app31319631\"\n        }\n    },\n    redis: {\n        adapter: \"redisAdapter\",\n        config: {\n            connection: {\n                type: 'redis',\n                host: 'localhost',         // optional\n                password: '',\n                port: 6379,                // optional\n                prefix: 'sess',            // optional\n                ttl: 804600,               // optional\n                timeout: 10000             // optional\n            },\n            defaultUrl: function () {\n                \"use strict\";\n                return process.env.REDISCLOUD_URL || this.connection.type + \"://\" + this.connection.host + \":\" + this.connection.port;\n            }\n        }\n    },\n    rabbitmq: {\n        adapter: \"rabbitAdapter\",\n        config: {\n            url: process.env.CLOUDAMQP_URL || 'amqp://localhost'\n        }\n    },\n    amqp: {\n        adapter: \"amqpAdapter\",\n        config: {\n            //url: 'amqp://cutma1X1:aSSRFXC7_K5MvnwAGKrg3uZ7CMTCiTNt@swift-bluebell-30.bigwig.lshift.net:11068/0kFUqWJSIiki'\n            url: process.env.CLOUDAMQP_URL || 'amqp://localhost'\n        }\n    },\n    socketIo: {\n        adapter: \"wsAdapter\",\n        config: {\n            port: process.env.PORT || 3000,\n            namespace: \"ns\"\n        }\n    }\n};\n\nexport default {\n    getAdapterConfig: function(name) {\n        if (!defaultValue.hasOwnProperty(name)) {\n            return new Error(`The adapter not contain a property name: ${name}`);\n        }\n\n        if (!config.hasOwnProperty(defaultValue[name])) {\n            return new Error(`The adapter config don't containe a description for ${defaultValue[name]}`);\n        }\n\n        return config[defaultValue[name]];\n    },\n    getAdapter: function(name) {\n        let adapter = this.getAdapterConfig(name);\n        if (adapter instanceof Error) {\n            return adapter;\n        }\n        return adapter.adapter;\n    },\n    getConfig: function(name) {\n        let config = this.getAdapterConfig(name);\n        if (config instanceof Error) {\n            return config;\n        }\n        return config.config;\n    }\n};"]}