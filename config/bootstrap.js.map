{"version":3,"sources":["bootstrap.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;wBAImB,aAAa;;;;+BACX,sBAAsB;;;;kBAC5B,IAAI;;;;AAEnB,SAAS,UAAU,CAAC,IAAI,EAAE;AACxB,SAAO,6BAAS,IAAI,CAAC,CAAC;CACvB;;AAED,SAAS,QAAQ,CAAC,GAAG,EAAE;AACrB,MAAI,IAAI,GAAG,sBAAO,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAC3C,SAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACtC,QAAI,6BAAS,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;GAC7B,CAAC,CAAC;CACJ;;IAEoB,SAAS;AACjB,WADQ,SAAS,CAChB,QAAQ,EAAE;0BADH,SAAS;;;AAG1B,oBAAG,WAAW,MAAI,sBAAO,IAAI,aAAU,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AAC7D,UAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACtB,eAAO,MAAI,sBAAO,IAAI,gBAAW,IAAI,CAAG,CAAC;OAC1C;KACF,CAAC,CAAC;GACJ;;eARkB,SAAS;;WAUzB,aAAC,MAAM,EAAE;AACV,UAAI,GAAG,GAAG,OAAO,MAAI,sBAAO,IAAI,aAAU,CAAC;AAC3C,WAAI,6BAAS,sBAAO,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,EAAC,CAAC,YAAW;AAC9D,aAAI,6BAAS,sBAAO,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAC,CAAC,YAAW;AAC5D,eAAI,6BAAS,sBAAO,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,EAAC,CAAC,YAAW;AAC3D,iBAAI,6BAAS,sBAAO,QAAQ,CAAC,UAAU,CAAC,WAAW,CAAC,EAAC,CAAC,MAAM,EAAE,YAAW,EACxE,CAAC,CAAC;WACJ,CAAC,CAAA;SACH,CAAC,CAAC;OACJ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;KAoBJ;;;SAvCkB,SAAS;;;qBAAT,SAAS","file":"bootstrap.js","sourcesContent":["/**\n * Created by michaelsilvestre on 19/04/15\n */\n\nimport config from \"./config.js\"\nimport adapters from \"../adapters/index.js\"\nimport fs from 'fs'\n\nfunction getAdapter(name) {\n  return adapters[name];\n}\n\nfunction dbloader(key) {\n  let name = config.adapters.getAdapter(key);\n  return new Promise((resolve, reject) => {\n    new adapters[name](resolve);\n  });\n}\n\nexport default class Bootstrap {\n  constructor(callback) {\n    // Bootstrap models\n    fs.readdirSync(`${config.root}/models`).forEach(function(file) {\n      if (/\\.js$/.test(file)) {\n        require(`${config.root}/models/${file}`);\n      }\n    });\n  }\n\n  run(server) {\n    let App = require(`${config.root}/app.js`);\n    new adapters[config.adapters.getAdapter(\"database\")](function() {\n      new adapters[config.adapters.getAdapter(\"memory\")](function() {\n        new adapters[config.adapters.getAdapter(\"queue\")](function() {\n          new adapters[config.adapters.getAdapter(\"websocket\")](server, function() {\n          });\n        })\n      });\n    });\n\n\n    //websocket.io.listen(server);\n    /*\n     var p = dbloader(\"database\")\n     .then(()=> {\n     return dbloader(\"memory\");\n     })\n     .then(() => {\n     return dbloader(\"queue\");\n     })\n     .then(() => {\n     return dbloader(\"websocket\");\n     })\n     .then((x) => {\n     x.io.listen(server);\n     let app = new App();\n     });\n     */\n  }\n}\n"]}