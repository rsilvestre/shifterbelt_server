{"version":3,"sources":["/Users/michaelsilvestre/git/shifterbelt/beta/app.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;sBAGwB,sBAAsB;;IAAlC,MAAM;;AAElB,SAAS,KAAK,CAAC,GAAG,EAAE;AACZ,QAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;AACpF,eAAO,IAAI,KAAK,qBAAmB,GAAG,iBAAc,CAAC;KACxD;AACD,WAAO,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;CACjE;;IAEoB,GAAG;AACT,aADM,GAAG,CACR,QAAQ,EAAE;8BADL,GAAG;;AAEhB,YAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,YAAI,CAAC,IAAI,EAAE,CAAC;KACf;;iBAJgB,GAAG;;eAMhB,gBAAG;AACH,gBAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;;AAE/C,gBAAI,QAAQ,GAAG,kBAAU,GAAG,EAAE,MAAM,EAAE;AAClC,oBAAI,GAAG,EAAE,MAAM,GAAG,CAAC;AACnB,uBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACpB,4BAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;aACnC,CAAC;AACF,gBAAI,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;;AAE/B,gBAAI,OAAO,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;;AAElC,mBAAO,CAAC,OAAO,CAAC,yBAAyB,EAAE,UAAC,GAAG,EAAE,MAAM,EAAE,WAAW,EAAK;AACrE,oBAAI,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACpC,uBAAO,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aACjC,CAAC,CAAC;;SAEN;;;aAEW,YAAG;AACX,mBAAO,IAAI,CAAC,SAAS,CAAC;SACzB;;;eAES,oBAAC,IAAI,EAAE;AACb,mBAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SAC1C;;;WA/BgB,GAAG;;;qBAAH,GAAG","file":"app.js","sourcesContent":["/**\n * Created by michaelsilvestre on 19/04/15\n */\nimport * as config from \"./config/adapters.js\"\n\nfunction extra(key) {\n        if (!this.hasOwnProperty(key) && !this.hasOwnProperty(config.adapters.getAdapter(key))) {\n            return new Error(`The adaptater: ${key}, not exist`);\n        }\n        return this[key] || this[config.adapters.getAdapter(key)];\n}\n\nexport default class App {\n    constructor(adapters) {\n        this._adapters = adapters;\n        this.init();\n    }\n\n    init() {\n        let mssqlAdapter = this.getAdapter(\"database\");\n\n        let callback = function (err, result) {\n            if (err) throw err;\n            console.log(result);\n            mssqlAdapter.connection.close();\n        };\n        let mssql = mssqlAdapter.mssql;\n\n        let request = new mssql.Request();\n\n        request.execute('[dbo].[Users.SelectAll]', (err, record, returnValue) => {\n            if (err) return callback(err, null);\n            return callback(null, record);\n        });\n        //console.log(mssqlAdapter.mssql);\n    }\n\n    get adapters() {\n        return this._adapters;\n    }\n\n    getAdapter(name) {\n        return extra.call(this.adapters, name);\n    }\n}\n\n"]}